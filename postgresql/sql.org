#+TITLE: Structured Query Language
#+AUTHOR: M. Surmashev @muradbei
#+SETUPFILE: https://fniessen.github.io/org-html-themes/org/theme-readtheorg.setup
#+PROPERTY: header-args:sql :engine postgresql :dbport 5400 :dbhost localhost :dbuser postgres :dbpassword postgres :database postgres

* Intro

 [[./blackhole.png]]


* Table of Contents                                                   :TOC_3:
- [[#intro][Intro]]
- [[#plan][Plan]]
- [[#install][Install]]
- [[#what-is-sql][What is SQL?]]
- [[#query-types][Query types]]
  - [[#ddl][DDL]]
    - [[#create][Create]]
    - [[#alter][Alter]]
    - [[#drop][Drop]]
  - [[#dml][DML]]
    - [[#inser][Inser]]
    - [[#select][Select]]
    - [[#update][Update]]
    - [[#delete][Delete]]
  - [[#dcl][DCL]]
    - [[#grant][Grant]]
    - [[#revoke][Revoke]]
  - [[#tcl][TCL]]
  - [[#pgsql][PGSQL]]
    - [[#samples][Samples]]
- [[#data-types][Data Types]]
  - [[#numeric-types][Numeric Types]]
  - [[#character-types][Character Types]]
  - [[#datetime-types][Date/Time Types]]
  - [[#jsonjsonb][JSON/JSONB]]
  - [[#boolean-type][Boolean Type]]
  - [[#null][NULL]]
  - [[#geometric-types][Geometric Types]]
  - [[#arrays][Arrays]]
  - [[#other-types][Other Types]]
  - [[#postgresql-forks][PostgreSQL forks]]
- [[#aggregates][Aggregates]]
  - [[#sorting-and-filtering-in-aggregates][Sorting and Filtering in aggregates]]
  - [[#window-functions][Window Functions]]
- [[#joins][Joins]]
- [[#cte-and-recursive][CTE and RECURSIVE]]
  - [[#recursive][Recursive]]
    - [[#task][Task]]
- [[#out-of-scope][Out of scope]]
- [[#sql-trainers][SQL trainers]]
- [[#home-work][Home Work]]

* Plan

  - =SQL=
    - Query types
    - Data types
    - Aggregates
    - CTE

  - =JSON/JSONB=
    - [[#basic-operators-and-functions][Basic operators and functions]]
    - [[#jsquery][Jsquery]]
    - [[#jsonpath][JsonPath]]
    - [[#json-knife][Json knife]]

  - =QOPT=
    - [[#query][Query]]
    - Access Methods
      - [[#seq-scan][SEQ scan]]
      - [[#index-scan][Index scan]]
      - [[#bitmap-index-scan][Bitmap Index scan]]
    - [[#join][JOIN]]
      - [[#nested-loop][Nested loop]]
      - [[#hash-join][Hash join]]
      - [[#merge-join][Merge join]]
    - [[#gin-index][GIN index]]
    - Index variations
      - MultiColumnt
      - Partial
      - Functional

  - =PostgreSQL Internal=
    - MVCC
    - Isolation
    - Storage
    - Toast
    - Checkpoints
    - Wal

  - =Administration=
    - Configuration
    - Replication
    - Backup and resotre
    - Monitoring

* Install

   #+name: docker-compose.yaml
  #+BEGIN_SRC bash :results value drawer
    cat ./docker-compose.yaml
  #+END_SRC

   #+name: Run db
   #+BEGIN_SRC bash
     docker-compose up -d
   #+END_SRC

   #+name: Check connection bash psql
   #+BEGIN_SRC bash :results value drawer
     psql -h localhost -p 5400 -U postgres -c '\l'
   #+END_SRC

   #+name: Check connection and list databases
   #+BEGIN_SRC sql
     \l
   #+END_SRC

* What is SQL?

  ~SQL~ - Structured Query Language ([[https://en.wikipedia.org/wiki/SQL][Wiki]])

  #+name: Query sample
  #+BEGIN_SRC sql
    select 'Hello', 'SQL', '!';
  #+END_SRC

  #+name: SubQuery sample
  #+BEGIN_SRC sql
    select 'Hello', (select 'SQL');
  #+END_SRC

* Query types

 ~DDL~ - Data Definition Language
       =Create= =Alter= =Drop=

 ~DML~ - Data Manipulation Language
       =Select= =Insert= =Update= =Delete=

 ~DCL~ - Data Control Language
       =Grant= =Revoke=

 ~TCL~ - Transaction Control Language
       =Begin= =Commit= =Rollback= =Abort= =Savepoint=

** DDL

  ~Data Definition Language~ - is a syntax for creating and modifying
  database objects such as =table=, =index=, =user= and etc.

*** Create

    PostgreSQL =Create= commans list

    - [[https://postgrespro.ru/docs/postgresql/13/sql-create-access-method?lang=en][CREATE ACCESS METHOD]] — define a new access method
    - [[https://postgrespro.ru/docs/postgresql/13/sql-createaggregate?lang=en][CREATE AGGREGATE]] — define a new aggregate function
    - [[https://postgrespro.ru/docs/postgresql/13/sql-createcast?lang=en][CREATE CAST]] — define a new cast
    - [[https://postgrespro.ru/docs/postgresql/13/sql-createcollation?lang=en][CREATE COLLATION]] — define a new collation
    - [[https://postgrespro.ru/docs/postgresql/13/sql-createconversion?lang=en][CREATE CONVERSION]] — define a new encoding conversion
    - [[https://postgrespro.ru/docs/postgresql/13/sql-createdatabase?lang=en][CREATE DATABASE]] — create a new database
    - [[https://postgrespro.ru/docs/postgresql/13/sql-createdomain?lang=en][CREATE DOMAIN]] — define a new domain
    - [[https://postgrespro.ru/docs/postgresql/13/sql-createeventtrigger?lang=en][CREATE EVENT TRIGGER]] — define a new event trigger
    - [[https://postgrespro.ru/docs/postgresql/13/sql-createextension?lang=en][CREATE EXTENSION]] — install an extension
    - [[https://postgrespro.ru/docs/postgresql/13/sql-createforeigndatawrapper?lang=en][CREATE FOREIGN DATA WRAPPER]] — define a new foreign-data wrapper
    - [[https://postgrespro.ru/docs/postgresql/13/sql-createforeigntable?lang=en][CREATE FOREIGN TABLE]] — define a new foreign table
    - [[https://postgrespro.ru/docs/postgresql/13/sql-createfunction?lang=en][CREATE FUNCTION]] — define a new function
    - [[https://postgrespro.ru/docs/postgresql/13/sql-creategroup?lang=en][CREATE GROUP]] — define a new database role
    - [[https://postgrespro.ru/docs/postgresql/13/sql-createindex?lang=en][CREATE INDEX]] — define a new index
    - [[https://postgrespro.ru/docs/postgresql/13/sql-createlanguage?lang=en][CREATE LANGUAGE]] — define a new procedural language
    - [[https://postgrespro.ru/docs/postgresql/13/sql-creatematerializedview?lang=en][CREATE MATERIALIZED VIEW]] — define a new materialized view
    - [[https://postgrespro.ru/docs/postgresql/13/sql-createoperator?lang=en][CREATE OPERATOR]] — define a new operator
    - [[https://postgrespro.ru/docs/postgresql/13/sql-createopclass?lang=en][CREATE OPERATOR CLASS]] — define a new operator class
    - [[https://postgrespro.ru/docs/postgresql/13/sql-createopfamily?lang=en][CREATE OPERATOR FAMILY]] — define a new operator family
    - [[https://postgrespro.ru/docs/postgresql/13/sql-createpolicy?lang=en][CREATE POLICY]] — define a new row level security policy for a table
    - [[https://postgrespro.ru/docs/postgresql/13/sql-createprocedure?lang=en][CREATE PROCEDURE]] — define a new procedure
    - [[https://postgrespro.ru/docs/postgresql/13/sql-createpublication?lang=en][CREATE PUBLICATION]] — define a new publication
    - [[https://postgrespro.ru/docs/postgresql/13/sql-createrole?lang=en][CREATE ROLE]] — define a new database role
    - [[https://postgrespro.ru/docs/postgresql/13/sql-createrule?lang=en][CREATE RULE]] — define a new rewrite rule
    - [[https://postgrespro.ru/docs/postgresql/13/sql-createschema?lang=en][CREATE SCHEMA]] — define a new schema
    - [[https://postgrespro.ru/docs/postgresql/13/sql-createsequence?lang=en][CREATE SEQUENCE]] — define a new sequence generator
    - [[https://postgrespro.ru/docs/postgresql/13/sql-createserver?lang=en][CREATE SERVER]] — define a new foreign server
    - [[https://postgrespro.ru/docs/postgresql/13/sql-createstatistics?lang=en][CREATE STATISTICS]] — define extended statistics
    - [[https://postgrespro.ru/docs/postgresql/13/sql-createsubscription?lang=en][CREATE SUBSCRIPTION]] — define a new subscription
    - [[https://postgrespro.ru/docs/postgresql/13/sql-createtable?lang=en][CREATE TABLE]] — define a new table
    - [[https://postgrespro.ru/docs/postgresql/13/sql-createtableas?lang=en][CREATE TABLE AS]] — define a new table from the results of a query
    - [[https://postgrespro.ru/docs/postgresql/13/sql-createtablespace?lang=en][CREATE TABLESPACE]] — define a new tablespace
    - [[https://postgrespro.ru/docs/postgresql/13/sql-createtsconfig?lang=en][CREATE TEXT SEARCH CONFIGURATION]] — define a new text search configuration
    - [[https://postgrespro.ru/docs/postgresql/13/sql-createtsdictionary?lang=en][CREATE TEXT SEARCH DICTIONARY]] — define a new text search dictionary
    - [[https://postgrespro.ru/docs/postgresql/13/sql-createtsparser?lang=en][CREATE TEXT SEARCH PARSER]] — define a new text search parser
    - [[https://postgrespro.ru/docs/postgresql/13/sql-createtstemplate?lang=en][CREATE TEXT SEARCH TEMPLATE]] — define a new text search template
    - [[https://postgrespro.ru/docs/postgresql/13/sql-createtransform?lang=en][CREATE TRANSFORM]] — define a new transform
    - [[https://postgrespro.ru/docs/postgresql/13/sql-createtrigger?lang=en][CREATE TRIGGER]] — define a new trigger
    - [[https://postgrespro.ru/docs/postgresql/13/sql-createtype?lang=en][CREATE TYPE]] — define a new data type
    - [[https://postgrespro.ru/docs/postgresql/13/sql-createuser?lang=en][CREATE USER]] — define a new database role
    - [[https://postgrespro.ru/docs/postgresql/13/sql-createusermapping?lang=en][CREATE USER MAPPING]] — define a new mapping of a user to a foreign server
    - [[https://postgrespro.ru/docs/postgresql/13/sql-createview?lang=en][CREATE VIEW]] — define a new view

**** CREATE TABLE

    [[https://postgrespro.ru/docs/postgresql/13/sql-createtable?lang=en][CREATE TABLE]] — define a new table

    How to read [[https://www.postgresql.org/docs/13/notation.html][Synopsis]]:

    - =[= ~a~ | ~b~ =]= means that ~a~ or ~b~ is optional
    - ={= ~a~ | ~b~ =}= means ~a~ or ~b~
    - *Bold* text  represents something you need to fill.
    - ... - mean that the preceding element can be repeated
    - , ... - mean that the preceding element can be repeated with separator ~,~

    ~CREATE~ =[ [= ~GLOBAL~ | ~LOCAL~ =]= ={= ~TEMPORARY~ | ~TEMP~ =}= | ~UNLOGGED~ =]= ~TABLE~
    =[= ~IF NOT EXISTS~ =]= *table_name*
    (=[{= *column_name* *data_type* =[= ~COLLATE~ *collation* =] [= *column_constraint* =[ ... ]= ] |
	*table_constraint* |
	~LIKE~ *source_table* [ *like_option* ... ] =}=
      [, ... ] =]=)
    =[= ~INHERITS~ ( *parent_table* =[=, ... =]= ) =]=
    =[ ~PARTITION BY~ ={= ~RANGE~ | ~LIST~ | ~HASH~ =}= ( ={= *column_name* =|= ( *expression* ) =}= =[= ~COLLATE~ *collation* =] [= *opclass* =] [=, ... =]= ) =]=
    =[= ~USING~ *method =]=
    =[= ~WITH~ ( *storage_parameter* =[= value =] [=, ... =]= ) | ~WITHOUT OIDS~ =]=
    =[= ~ON COMMIT~ ={= ~PRESERVE ROWS~ | ~DELETE ROWS~ | ~DROP~ =}= =]=
    =[= ~TABLESPACE~ *tablespace_name* =]=

***** Example

    #+name: Create table without rows
    #+BEGIN_SRC sql
      CREATE table if not exists empty_sample ();
    #+END_SRC


    #+name: Describe table
    #+BEGIN_SRC sql :results value drawer
      \d+ empty_sample
    #+END_SRC


    #+name: Create table
    #+BEGIN_SRC sql
      CREATE table if not exists sample (
        id int not null,
        name varchar(256) default 'HS'
      );
    #+END_SRC

    #+name: Describe table sample
    #+BEGIN_SRC sql
      \d+ sample
    #+END_SRC

    ⚡ Serial and Unique

    #+BEGIN_SRC sql
      create table person (
         id serial,
         name varchar(256) unique
      );
    #+END_SRC

    #+BEGIN_SRC sql
      \d+ person
    #+END_SRC

    #+BEGIN_SRC sql
      select * from pg_indexes where tablename = 'person';
    #+END_SRC

    #+BEGIN_SRC sql
      \ds
    #+END_SRC

    #+BEGIN_SRC sql
      select * from pg_sequences;
    #+END_SRC

*** Alter

    PostgreSQL =Alter= commans list

    - [[https://postgrespro.ru/docs/postgresql/13/sql-alteraggregate?lang=en][ALTER AGGREGATE]] — change the definition of an aggregate function
    - [[https://postgrespro.ru/docs/postgresql/13/sql-altercollation?lang=en][ALTER COLLATION]] — change the definition of a collation
    - [[https://postgrespro.ru/docs/postgresql/13/sql-alterconversion?lang=en][ALTER CONVERSION]] — change the definition of a conversion
    - [[https://postgrespro.ru/docs/postgresql/13/sql-alterdatabase?lang=en][ALTER DATABASE]] — change a database
    - [[https://postgrespro.ru/docs/postgresql/13/sql-alterdefaultprivileges?lang=en][ALTER DEFAULT PRIVILEGES]] — define default access privileges
    - [[https://postgrespro.ru/docs/postgresql/13/sql-alterdomain?lang=en][ALTER DOMAIN]] — change the definition of a domain
    - [[https://postgrespro.ru/docs/postgresql/13/sql-altereventtrigger?lang=en][ALTER EVENT TRIGGER]] — change the definition of an event trigger
    - [[https://postgrespro.ru/docs/postgresql/13/sql-alterextension?lang=en][ALTER EXTENSION]] — change the definition of an extension
    - [[https://postgrespro.ru/docs/postgresql/13/sql-alterforeigndatawrapper?lang=en][ALTER FOREIGN DATA WRAPPER]] — change the definition of a foreign-data wrapper
    - [[https://postgrespro.ru/docs/postgresql/13/sql-alterforeigntable?lang=en][ALTER FOREIGN TABLE]] — change the definition of a foreign table
    - [[https://postgrespro.ru/docs/postgresql/13/sql-alterfunction?lang=en][ALTER FUNCTION]] — change the definition of a function
    - [[https://postgrespro.ru/docs/postgresql/13/sql-altergroup?lang=en][ALTER GROUP]] — change role name or membership
    - [[https://postgrespro.ru/docs/postgresql/13/sql-alterindex?lang=en][ALTER INDEX]] — change the definition of an index
    - [[https://postgrespro.ru/docs/postgresql/13/sql-alterlanguage?lang=en][ALTER LANGUAGE]] — change the definition of a procedural language
    - [[https://postgrespro.ru/docs/postgresql/13/sql-alterlargeobject?lang=en][ALTER LARGE OBJECT]] — change the definition of a large object
    - [[https://postgrespro.ru/docs/postgresql/13/sql-altermaterializedview?lang=en][ALTER MATERIALIZED VIEW]] — change the definition of a materialized view
    - [[https://postgrespro.ru/docs/postgresql/13/sql-alteroperator?lang=en][ALTER OPERATOR]] — change the definition of an operator
    - [[https://postgrespro.ru/docs/postgresql/13/sql-alteropclass?lang=en][ALTER OPERATOR CLASS]] — change the definition of an operator class
    - [[https://postgrespro.ru/docs/postgresql/13/sql-alteropfamily?lang=en][ALTER OPERATOR FAMILY]] — change the definition of an operator family
    - [[https://postgrespro.ru/docs/postgresql/13/sql-alterpolicy?lang=en][ALTER POLICY]] — change the definition of a row level security policy
    - [[https://postgrespro.ru/docs/postgresql/13/sql-alterprocedure?lang=en][ALTER PROCEDURE]] — change the definition of a procedure
    - [[https://postgrespro.ru/docs/postgresql/13/sql-alterpublication?lang=en][ALTER PUBLICATION]] — change the definition of a publication
    - [[https://postgrespro.ru/docs/postgresql/13/sql-alterrole?lang=en][ALTER ROLE]] — change a database role
    - [[https://postgrespro.ru/docs/postgresql/13/sql-alterroutine?lang=en][ALTER ROUTINE]] — change the definition of a routine
    - [[https://postgrespro.ru/docs/postgresql/13/sql-alterrule?lang=en][ALTER RULE]] — change the definition of a rule
    - [[https://postgrespro.ru/docs/postgresql/13/sql-alterschema?lang=en][ALTER SCHEMA]] — change the definition of a schema
    - [[https://postgrespro.ru/docs/postgresql/13/sql-altersequence?lang=en][ALTER SEQUENCE]] — change the definition of a sequence generator
    - [[https://postgrespro.ru/docs/postgresql/13/sql-alterserver?lang=en][ALTER SERVER]] — change the definition of a foreign server
    - [[https://postgrespro.ru/docs/postgresql/13/sql-alterstatistics?lang=en][ALTER STATISTICS]] — change the definition of an extended statistics object
    - [[https://postgrespro.ru/docs/postgresql/13/sql-altersubscription?lang=en][ALTER SUBSCRIPTION]] — change the definition of a subscription
    - [[https://postgrespro.ru/docs/postgresql/13/sql-altersystem?lang=en][ALTER SYSTEM]] — change a server configuration parameter
    - [[https://postgrespro.ru/docs/postgresql/13/sql-altertable?lang=en][ALTER TABLE]] — change the definition of a table
    - [[https://postgrespro.ru/docs/postgresql/13/sql-altertablespace?lang=en][ALTER TABLESPACE]] — change the definition of a tablespace
    - [[https://postgrespro.ru/docs/postgresql/13/sql-altertsconfig?lang=en][ALTER TEXT SEARCH CONFIGURATION]] — change the definition of a text search configuration
    - [[https://postgrespro.ru/docs/postgresql/13/sql-altertsdictionary?lang=en][ALTER TEXT SEARCH DICTIONARY]] — change the definition of a text search dictionary
    - [[https://postgrespro.ru/docs/postgresql/13/sql-altertsparser?lang=en][ALTER TEXT SEARCH PARSER]] — change the definition of a text search parser
    - [[https://postgrespro.ru/docs/postgresql/13/sql-altertstemplate?lang=en][ALTER TEXT SEARCH TEMPLATE]] — change the definition of a text search template
    - [[https://postgrespro.ru/docs/postgresql/13/sql-altertrigger?lang=en][ALTER TRIGGER]] — change the definition of a trigger
    - [[https://postgrespro.ru/docs/postgresql/13/sql-altertype?lang=en][ALTER TYPE]] — change the definition of a type
    - [[https://postgrespro.ru/docs/postgresql/13/sql-alteruser?lang=en][ALTER USER]] — change a database role
    - [[https://postgrespro.ru/docs/postgresql/13/sql-alterusermapping?lang=en][ALTER USER MAPPING]] — change the definition of a user mapping
    - [[https://postgrespro.ru/docs/postgresql/13/sql-alterview?lang=en][ALTER VIEW]] — change the definition of a view

**** Sample

    [[https://postgrespro.ru/docs/postgresql/13/sql-altertable?lang=en][ALTER TABLE]] — change the definition of a table

    #+name: Describe table
    #+BEGIN_SRC sql
      \d+ sample
    #+END_SRC

    #+name: Add column
    #+BEGIN_SRC sql
      ALTER table sample
      ADD column ts timestamptz;
    #+END_SRC

    #+BEGIN_SRC sql
      \d+ sample
    #+END_SRC

*** Drop

    PostgreSQL =Drop= commans list

    - [[https://postgrespro.ru/docs/postgresql/13/sql-drop-access-method?lang=en][DROP ACCESS METHOD]] — remove an access method
    - [[https://postgrespro.ru/docs/postgresql/13/sql-dropaggregate?lang=en][DROP AGGREGATE]] — remove an aggregate function
    - [[https://postgrespro.ru/docs/postgresql/13/sql-dropcast?lang=en][DROP CAST]] — remove a cast
    - [[https://postgrespro.ru/docs/postgresql/13/sql-dropcollation?lang=en][DROP COLLATION]] — remove a collation
    - [[https://postgrespro.ru/docs/postgresql/13/sql-dropconversion?lang=en][DROP CONVERSION]] — remove a conversion
    - [[https://postgrespro.ru/docs/postgresql/13/sql-dropdatabase?lang=en][DROP DATABASE]] — remove a database
    - [[https://postgrespro.ru/docs/postgresql/13/sql-dropdomain?lang=en][DROP DOMAIN]] — remove a domain
    - [[https://postgrespro.ru/docs/postgresql/13/sql-dropeventtrigger?lang=en][DROP EVENT TRIGGER]] — remove an event trigger
    - [[https://postgrespro.ru/docs/postgresql/13/sql-dropextension?lang=en][DROP EXTENSION]] — remove an extension
    - [[https://postgrespro.ru/docs/postgresql/13/sql-dropforeigndatawrapper?lang=en][DROP FOREIGN DATA WRAPPER]] — remove a foreign-data wrapper
    - [[https://postgrespro.ru/docs/postgresql/13/sql-dropforeigntable?lang=en][DROP FOREIGN TABLE]] — remove a foreign table
    - [[https://postgrespro.ru/docs/postgresql/13/sql-dropfunction?lang=en][DROP FUNCTION]] — remove a function
    - [[https://postgrespro.ru/docs/postgresql/13/sql-dropgroup?lang=en][DROP GROUP]] — remove a database role
    - [[https://postgrespro.ru/docs/postgresql/13/sql-dropindex?lang=en][DROP INDEX]] — remove an index
    - [[https://postgrespro.ru/docs/postgresql/13/sql-droplanguage?lang=en][DROP LANGUAGE]] — remove a procedural language
    - [[https://postgrespro.ru/docs/postgresql/13/sql-dropmaterializedview?lang=en][DROP MATERIALIZED VIEW]] — remove a materialized view
    - [[https://postgrespro.ru/docs/postgresql/13/sql-dropoperator?lang=en][DROP OPERATOR]] — remove an operator
    - [[https://postgrespro.ru/docs/postgresql/13/sql-dropopclass?lang=en][DROP OPERATOR CLASS]] — remove an operator class
    - [[https://postgrespro.ru/docs/postgresql/13/sql-dropopfamily?lang=en][DROP OPERATOR FAMILY]] — remove an operator family
    - [[https://postgrespro.ru/docs/postgresql/13/sql-drop-owned?lang=en][DROP OWNED]] — remove database objects owned by a database role
    - [[https://postgrespro.ru/docs/postgresql/13/sql-droppolicy?lang=en][DROP POLICY]] — remove a row level security policy from a table
    - [[https://postgrespro.ru/docs/postgresql/13/sql-dropprocedure?lang=en][DROP PROCEDURE]] — remove a procedure
    - [[https://postgrespro.ru/docs/postgresql/13/sql-droppublication?lang=en][DROP PUBLICATION]] — remove a publication
    - [[https://postgrespro.ru/docs/postgresql/13/sql-droprole?lang=en][DROP ROLE]] — remove a database role
    - [[https://postgrespro.ru/docs/postgresql/13/sql-droproutine?lang=en][DROP ROUTINE]] — remove a routine
    - [[https://postgrespro.ru/docs/postgresql/13/sql-droprule?lang=en][DROP RULE]] — remove a rewrite rule
    - [[https://postgrespro.ru/docs/postgresql/13/sql-dropschema?lang=en][DROP SCHEMA]] — remove a schema
    - [[https://postgrespro.ru/docs/postgresql/13/sql-dropsequence?lang=en][DROP SEQUENCE]] — remove a sequence
    - [[https://postgrespro.ru/docs/postgresql/13/sql-dropserver?lang=en][DROP SERVER]] — remove a foreign server descriptor
    - [[https://postgrespro.ru/docs/postgresql/13/sql-dropstatistics?lang=en][DROP STATISTICS]] — remove extended statistics
    - [[https://postgrespro.ru/docs/postgresql/13/sql-dropsubscription?lang=en][DROP SUBSCRIPTION]] — remove a subscription
    - [[https://postgrespro.ru/docs/postgresql/13/sql-droptable?lang=en][DROP TABLE]] — remove a table
    - [[https://postgrespro.ru/docs/postgresql/13/sql-droptablespace?lang=en][DROP TABLESPACE]] — remove a tablespace
    - [[https://postgrespro.ru/docs/postgresql/13/sql-droptsconfig?lang=en][DROP TEXT SEARCH CONFIGURATION]] — remove a text search configuration
    - [[https://postgrespro.ru/docs/postgresql/13/sql-droptsdictionary?lang=en][DROP TEXT SEARCH DICTIONARY]] — remove a text search dictionary
    - [[https://postgrespro.ru/docs/postgresql/13/sql-droptsparser?lang=en][DROP TEXT SEARCH PARSER]] — remove a text search parser
    - [[https://postgrespro.ru/docs/postgresql/13/sql-droptstemplate?lang=en][DROP TEXT SEARCH TEMPLATE]] — remove a text search template
    - [[https://postgrespro.ru/docs/postgresql/13/sql-droptransform?lang=en][DROP TRANSFORM]] — remove a transform
    - [[https://postgrespro.ru/docs/postgresql/13/sql-droptrigger?lang=en][DROP TRIGGER]] — remove a trigger
    - [[https://postgrespro.ru/docs/postgresql/13/sql-droptype?lang=en][DROP TYPE]] — remove a data type
    - [[https://postgrespro.ru/docs/postgresql/13/sql-dropuser?lang=en][DROP USER]] — remove a database role
    - [[https://postgrespro.ru/docs/postgresql/13/sql-dropusermapping?lang=en][DROP USER MAPPING]] — remove a user mapping for a foreign server
    - [[https://postgrespro.ru/docs/postgresql/13/sql-dropview?lang=en][DROP VIEW]] — remove a view

**** Sample

    #+BEGIN_SRC sql
      \dt
    #+END_SRC

    #+BEGIN_SRC sql
      DROP table sample;
    #+END_SRC

    #+BEGIN_SRC sql
      \dt
    #+END_SRC


** DML

  ~Data Manipulation Language~ - used for adding (inserting), deleting,
  selecting, and modifying (updating) data in a database.

*** Inser

    [[https://postgrespro.ru/docs/postgresql/13/sql-insert?lang=en][INSERT]] — create new rows in a table

    #+BEGIN_SRC sql
      create table sample (id int);
    #+END_SRC

    #+BEGIN_SRC sql
      insert into sample (id)
      values (1) ,(2) ,(3);
    #+END_SRC

    #+BEGIN_SRC sql
      select * from sample;
    #+END_SRC

    #+BEGIN_SRC sql
      insert into sample(id)
      select * from generate_series(100,105);
    #+END_SRC

    #+BEGIN_SRC sql
      select * from sample;
    #+END_SRC

    #+BEGIN_SRC sql
      truncate sample;
    #+END_SRC

    #+BEGIN_QUOTE
    ⚡  [[https://postgrespro.ru/docs/postgresql/13/sql-values?lang=en][VALUES]] — compute a set of rows
    #+END_QUOTE

    #+BEGIN_SRC sql
      values (1) ,(2) ,(3);
    #+END_SRC


**** Task

     Create test suite for function ~my_summ~ that summ two integers

    #+BEGIN_SRC sql
      CREATE or replace FUNCTION my_summ(a int, b int) RETURNS int AS $$
	SELECT a + b +1;
      $$ LANGUAGE sql;
    #+END_SRC


    #+BEGIN_SRC sql
    select every(my_summ(a, b) = res)
    from (values (1, 2, 3)
	        ,(2, 2, 4)
		,(5, 2, 7)
                ,(2, 2, 4)) t(a,b, res)
    #+END_SRC


*** Select

   - [[https://postgrespro.ru/docs/postgresql/13/sql-select?lang=en][SELECT]] — retrieve rows from a table or view
   - [[https://postgrespro.ru/docs/postgresql/13/sql-selectinto?lang=en][SELECT INTO]] — define a new table from the results of a query

    #+BEGIN_SRC sql
      select * from sample;
    #+END_SRC

    #+BEGIN_SRC sql
      select * into sample_big from sample where id > 102;
    #+END_SRC

    #+BEGIN_SRC sql
      select * from sample_big;
    #+END_SRC

*** Update

    [[https://postgrespro.ru/docs/postgresql/13/sql-update?lang=en][UPDATE]] — update rows of a table

    #+BEGIN_SRC sql
      update sample
      set id = (id + 100)
      where id > 100
      returning id
    #+END_SRC


    #+BEGIN_SRC sql
      select * from sample
    #+END_SRC

*** Delete

    [[https://postgrespro.ru/docs/postgresql/13/sql-delete?lang=en][DELETE]] — delete rows of a table

    #+BEGIN_SRC sql
      delete from sample
      where id >= 100
      returning id;
    #+END_SRC

    =Delete= ~VS~ =Truncate=

    ⚡ [[https://postgrespro.ru/docs/postgresql/13/sql-truncate?lang=en][TRUNCATE]] — empty a table or set of tables

     [ RESTART IDENTITY | CONTINUE IDENTITY ]

    #+BEGIN_SRC sql
      create table seq_sample (
        id serial,
        t text
      );
    #+END_SRC


    #+BEGIN_SRC sql
      \d+ seq_sample
    #+END_SRC

    #+BEGIN_SRC sql
      select nextval('seq_sample_id_seq')
    #+END_SRC

    #+BEGIN_SRC sql
      insert into seq_sample (t)
      values ('one'), ('two');
    #+END_SRC

    #+BEGIN_SRC sql
      select * from seq_sample;
    #+END_SRC

    #+BEGIN_SRC sql
      truncate seq_sample;
    #+END_SRC

    #+BEGIN_SRC sql
      truncate seq_sample RESTART IDENTITY;
    #+END_SRC


** DCL

  ~Data Control Language~ - defines the control over the data in the database.

*** Grant

    [[https://postgrespro.ru/docs/postgresql/13/sql-grant?lang=en][GRANT]] — define access privileges

    #+name: Create new user
    #+BEGIN_SRC sql
      create user samurai;
    #+END_SRC

    #+name: Describe user
    #+BEGIN_SRC sql
      \du
    #+END_SRC

    #+name: Grant privileges
    #+BEGIN_SRC sql
      GRANT ALL PRIVILEGES ON sample TO samurai;
    #+END_SRC

    #+name: Check privileges
    #+BEGIN_SRC sql
      SELECT grantee, privilege_type
      FROM information_schema.role_table_grants
      WHERE table_name='sample'
    #+END_SRC

*** Revoke

    [[https://postgrespro.ru/docs/postgresql/13/sql-revoke?lang=en][REVOKE]] — remove access privileges

    #+name: Revoke privileges
    #+BEGIN_SRC sql
      REVOKE ALL PRIVILEGES ON sample FROM samurai;
    #+END_SRC

    #+BEGIN_SRC sql
      SELECT grantee, privilege_type
      FROM information_schema.role_table_grants
      WHERE table_name='sample'
    #+END_SRC

** TCL

  ~Transaction Control Language~ - commands are used to manage the transactions in the database.
  Samples in [[./playground.sql]] file.

  - =Begin=
    [[https://postgrespro.ru/docs/postgresql/13/sql-begin?lang=en][BEGIN]] — start a transaction block
    [[https://postgrespro.ru/docs/postgresql/13/sql-start-transaction?lang=en][START TRANSACTION]] — start a transaction block
    [[https://postgrespro.ru/docs/postgresql/13/sql-prepare-transaction?lang=en][PREPARE TRANSACTION]] — prepare the current transaction for two-phase commit

  - =Commit=
    [[https://postgrespro.ru/docs/postgresql/13/sql-commit?lang=en][COMMIT]] — commit the current transaction
    [[https://postgrespro.ru/docs/postgresql/13/sql-commit-prepared?lang=en][COMMIT PREPARED]] — commit a transaction that was earlier prepared for two-phase commit
    [[https://postgrespro.ru/docs/postgresql/13/sql-end?lang=en][END]] — commit the current transaction

  - =Rollback=
    [[https://postgrespro.ru/docs/postgresql/13/sql-rollback?lang=en][ROLLBACK]] — abort the current transaction
    [[https://postgrespro.ru/docs/postgresql/13/sql-rollback-prepared?lang=en][ROLLBACK PREPARED]] — cancel a transaction that was earlier prepared for two-phase commit
    [[https://postgrespro.ru/docs/postgresql/13/sql-rollback-to?lang=en][ROLLBACK TO SAVEPOINT]] — roll back to a savepoint

  - =Abort=
    [[https://postgrespro.ru/docs/postgresql/13/sql-abort?lang=en][ABORT]] — abort the current transaction

  - =Savepoint=
    [[https://postgrespro.ru/docs/postgresql/13/sql-savepoint?lang=en][SAVEPOINT]] — define a new savepoint within the current transaction
    [[https://postgrespro.ru/docs/postgresql/13/sql-release-savepoint?lang=en][RELEASE SAVEPOINT]] — destroy a previously defined savepoint

    #+name: Insert in transaction
    #+BEGIN_SRC sql
      begin;
      insert into sample (id)
      select * from generate_series(0, 10);
      commit;
    #+END_SRC

    #+name: Rollback
    #+BEGIN_SRC sql
      begin;
      delete from sample;
      select * from sample;
      rollback;
    #+END_SRC

** PGSQL

    [[https://postgrespro.ru/docs/postgresql/13/sql-call?lang=en][CALL]] — invoke a procedure
    [[https://postgrespro.ru/docs/postgresql/13/sql-checkpoint?lang=en][CHECKPOINT]] — force a write-ahead log checkpoint
    [[https://postgrespro.ru/docs/postgresql/13/sql-close?lang=en][CLOSE]] — close a cursor
    [[https://postgrespro.ru/docs/postgresql/13/sql-comment?lang=en][COMMENT]] — define or change the comment of an object
    [[https://postgrespro.ru/docs/postgresql/13/sql-declare?lang=en][DECLARE]] — define a cursor
    [[https://postgrespro.ru/docs/postgresql/13/sql-discard?lang=en][DISCARD]] — discard session state
    [[https://postgrespro.ru/docs/postgresql/13/sql-do?lang=en][DO]] — execute an anonymous code block
    [[https://postgrespro.ru/docs/postgresql/13/sql-fetch?lang=en][FETCH]] — retrieve rows from a query using a cursor
    [[https://postgrespro.ru/docs/postgresql/13/sql-importforeignschema?lang=en][IMPORT FOREIGN SCHEMA]] — import table definitions from a foreign server
    [[https://postgrespro.ru/docs/postgresql/13/sql-listen?lang=en][LISTEN]] — listen for a notification
    [[https://postgrespro.ru/docs/postgresql/13/sql-load?lang=en][LOAD]] — load a shared library file
    [[https://postgrespro.ru/docs/postgresql/13/sql-lock?lang=en][LOCK]] — lock a table
    [[https://postgrespro.ru/docs/postgresql/13/sql-move?lang=en][MOVE]] — position a cursor
    [[https://postgrespro.ru/docs/postgresql/13/sql-notify?lang=en][NOTIFY]] — generate a notification
    [[https://postgrespro.ru/docs/postgresql/13/sql-reassign-owned?lang=en][REASSIGN OWNED]] — change the ownership of database objects owned by a database role
    [[https://postgrespro.ru/docs/postgresql/13/sql-refreshmaterializedview?lang=en][REFRESH MATERIALIZED VIEW]] — replace the contents of a materialized view
    [[https://postgrespro.ru/docs/postgresql/13/sql-security-label?lang=en][SECURITY LABEL]] — define or change a security label applied to an object
    [[https://postgrespro.ru/docs/postgresql/13/sql-unlisten?lang=en][UNLISTEN]] — stop listening for a notification
    [[https://postgrespro.ru/docs/postgresql/13/sql-values?lang=en][VALUES]] — compute a set of rows

    [[https://postgrespro.ru/docs/postgresql/13/sql-cluster?lang=en][CLUSTER]] — cluster a table according to an index
    [[https://postgrespro.ru/docs/postgresql/13/sql-reindex?lang=en][REINDEX]] — rebuild indexes

    [[https://postgrespro.ru/docs/postgresql/13/sql-truncate?lang=en][TRUNCATE]] — empty a table or set of tables
    [[https://postgrespro.ru/docs/postgresql/13/sql-copy?lang=en][COPY]] — copy data between a file and a table

    ~Optimization & Analyze~
    [[https://postgrespro.ru/docs/postgresql/13/sql-analyze?lang=en][ANALYZE]] — collect statistics about a database
    [[https://postgrespro.ru/docs/postgresql/13/sql-explain?lang=en][EXPLAIN]] — show the execution plan of a statement
    [[https://postgrespro.ru/docs/postgresql/13/sql-vacuum?lang=en][VACUUM]] — garbage-collect and optionally analyze a database

    ~Statement~
    [[https://postgrespro.ru/docs/postgresql/13/sql-prepare?lang=en][PREPARE]] — prepare a statement for execution
    [[https://postgrespro.ru/docs/postgresql/13/sql-execute?lang=en][EXECUTE]] — execute a prepared statement
    [[https://postgrespro.ru/docs/postgresql/13/sql-deallocate?lang=en][DEALLOCATE]] — deallocate a prepared statement

    ~Run-time parameter~
    [[https://postgrespro.ru/docs/postgresql/13/sql-set?lang=en][SET]] — change a run-time parameter
    [[https://postgrespro.ru/docs/postgresql/13/sql-set-constraints?lang=en][SET CONSTRAINTS]] — set constraint check timing for the current transaction
    [[https://postgrespro.ru/docs/postgresql/13/sql-set-role?lang=en][SET ROLE]] — set the current user identifier of the current session
    [[https://postgrespro.ru/docs/postgresql/13/sql-set-session-authorization?lang=en][SET SESSION AUTHORIZATION]] — set the session user identifier and the current user identifier of the current session
    [[https://postgrespro.ru/docs/postgresql/13/sql-set-transaction?lang=en][SET TRANSACTION]] — set the characteristics of the current transaction
    [[https://postgrespro.ru/docs/postgresql/13/sql-show?lang=en][SHOW]] — show the value of a run-time parameter
    [[https://postgrespro.ru/docs/postgresql/13/sql-reset?lang=en][RESET]] — restore the value of a run-time parameter to the default value

*** Samples

    #+BEGIN_SRC sql
      SHOW max_connections;
    #+END_SRC

    #+BEGIN_SRC sql
      vacuum analyze sample
    #+END_SRC

    #+BEGIN_SRC sql
      explain analyze
      select * from sample
    #+END_SRC

* Data Types

  =DBMS= -> =Database= -> =Schema= -> =Table= -> =Column=

  =DBMS= (Cluster) - ~my.super.instance~
    =Database= - ~project~
      =Schema= - ~public~
        =Table= - ~sample~
          =Column= -  ~id~ (type)

** Numeric Types

   [[https://postgrespro.ru/docs/postgrespro/10/datatype-numeric?lang=en][Numeric Types]] - Numeric types consist of two-, four-, and eight-byte integers,
   four- and eight-byte floating-point numbers, and selectable-precision decimals.

| ~Name~                      | ~StorageSize~ | ~Description~                     | ~Range~                                                                                    |
|---------------------------+-------------+---------------------------------+------------------------------------------------------------------------------------------|
| =smallint=, =int2=            | 2 bytes     | small-range integer             | -32768 to +32767                                                                         |
| =integer=, =int=, =int4=        | 4 bytes     | typical choice for integer      | -2147483648 to +2147483647                                                               |
| =bigint=, =int8=              | 8 bytes     | large-range integer             | -9223372036854775808 to +9223372036854775807                                             |
| =decimal=, =decimal [(p, s)]= | variable    | user-specified precision, exact | up to 131072 digits before the decimal point; up to 16383 digits after the decimal point |
| =numeric=, =numeric [(p, s)]= | variable    | user-specified precision, exact | up to 131072 digits before the decimal point; up to 16383 digits after the decimal point |
| =real=, =float4=              | 4 bytes     | variable-precision, inexact     | 6 decimal digits precision                                                               |
| =double precision=, =float8=  | 8 bytes     | variable-precision, inexact     | 15 decimal digits precision                                                              |
| =smallserial=, =serial2=      | 2 bytes     | small autoincrementing integer  | 1 to 32767                                                                               |
| =serial=, =serial4=           | 4 bytes     | autoincrementing integer        | 1 to 2147483647                                                                          |
| =bigserial=, =serial8=        | 8 bytes     | large autoincrementing integer  | 1 to 9223372036854775807                                                                 |

    #+BEGIN_SRC sql
      select (1.5)::integer
    #+END_SRC

    #+BEGIN_SRC sql
      create table sample_serial (
	id serial,
	name varchar(10)
      )
   #+END_SRC

    #+BEGIN_SRC sql
      \d+ sample_serial
    #+END_SRC

    #+BEGIN_SRC sql
      \ds
    #+END_SRC

** Character Types

   [[https://postgrespro.ru/docs/postgrespro/10/datatype-character?lang=en][Character Types]] - general-purpose character types.

| ~Name~                             | ~Description~                |
|----------------------------------+----------------------------|
| =character varying(n), varchar(n)= | variable-length with limit |
| =character(n), char(n)=            | fixed-length, blank padded |
| =text=                             | variable unlimited length  |

    #+BEGIN_SRC sql
      select 'Hello ' || 123::text || ' world';
    #+END_SRC

** Date/Time Types

   [[https://postgrespro.ru/docs/postgrespro/10/datatype-datetime?lang=en][Date/Time Types]] - types for date and time

:zap: [[https://www.postgresql.org/docs/13/functions-datetime.html][Date/Time Functions and Operators]]

| ~Name~                                    | ~StorageSize~ | ~Description~                           |
|-----------------------------------------+-------------+---------------------------------------+
| =timestamp [ (p) ] [ without time zone ]= | 8 bytes     | both date and time (no time zone)     |
| =timestamp [ (p) ] with time zone=        | 8 bytes     | both date and time, with time zone    |
| =date=                                    | 4 bytes     | date (no time of day)                 |
| =time [ (p) ] [ without time zone ]=      | 8 bytes     | time of day (no date)                 |
| =time [ (p) ] with time zone=             | 12 bytes    | time of day (no date), with time zone |
| =interval [ fields ] [ (p) ]=             | 16 bytes    | time interval                         |

    #+BEGIN_SRC sql
      select now();
    #+END_SRC


    #+BEGIN_SRC sql
      select EXTRACT(hours from now());
    #+END_SRC

** JSON/JSONB

   [[https://postgrespro.ru/docs/postgrespro/10/datatype-json?lang=en][JSON/JSONB]] - data types are for storing JSON

:zap: [[https://www.postgresql.org/docs/13/functions-json.html][JSON Functions and Operators]] - functions and operators for processing and creating JSON data

| ~JSON primitive type~ | ~Notes~                                                                                   |
|---------------------+-----------------------------------------------------------------------------------------|
| =string=              | ~\u0000~ is disallowed, as are non-ASCII Unicode escapes if database encoding is not UTF8 |
| =number=              | NaN and infinity values are disallowed                                                  |
| =boolean=             | Only lowercase true and false spellings are accepted                                    |
| =null=                | SQL NULL is a different concept                                                         |

   #+BEGIN_SRC sql
     select '{"name": "Joe"}'::jsonb
   #+END_SRC

   #+BEGIN_SRC sql
     select '[1, false , 3, "foo"]'::jsonb
   #+END_SRC

** Boolean Type

   [[https://postgrespro.ru/docs/postgrespro/10/datatype-boolean?lang=en][Boolean Type]] - can have several states: ~true~, ~false~, and a third
                  state, ~unknown~, which is represented by the SQL ~null~ value.

    #+BEGIN_SRC sql
      select 1 > 2;
    #+END_SRC

    #+BEGIN_SRC sql
      select false;
    #+END_SRC

** NULL

   #+BEGIN_SRC sql
     select true = true;
   #+END_SRC

   #+BEGIN_SRC sql
     select true = null;
   #+END_SRC

   #+BEGIN_SRC sql
     select false = null;
   #+END_SRC

   #+BEGIN_SRC sql
     select null is null;
   #+END_SRC

    #+BEGIN_SRC sql
      select 5 + null;
    #+END_SRC

    #+BEGIN_SRC sql
      select 5 + coalesce(null, 0);
    #+END_SRC

    #+BEGIN_SRC sql
    select 'Hello' || ' ' || 'world';
    #+END_SRC

    #+BEGIN_SRC sql
      select 'Hello' || null || ' ' || 'world';
    #+END_SRC

    #+BEGIN_SRC sql
      select concat('Hello', null, ' ', 'world')
    #+END_SRC

** Geometric Types

   [[https://postgrespro.ru/docs/postgrespro/10/datatype-geometric?lang=en][Geometric Types]] - Geometric data types represent two-dimensional spatial objects.

:zap:[[https://postgrespro.ru/docs/postgrespro/10/functions-geometry?lang=en][Geometric Functions and Operators]]

:zap:[[https://postgis.net/][PostGIS]] - is a spatial database extender for PostgreSQL object-relational database.
            It adds support for geographic objects allowing location queries to be run in SQL.

| ~Nam~     | ~Storage Siz~  | ~Description~                      | ~Representation~                      |
|---------+--------------+----------------------------------+-------------------------------------|
| =point=   | 16 bytes     | Point on a plane                 | (x,y)                               |
| =line=    | 32 bytes     | Infinite line                    | {A,B,C}                             |
| =lseg=    | 32 bytes     | Finite line segment              | ((x1,y1),(x2,y2))                   |
| =box=     | 32 bytes     | Rectangular box                  | ((x1,y1),(x2,y2))                   |
| =path=    | 16+16n bytes | Closed path (similar to polygon) | ((x1,y1),...)                       |
| =path=    | 16+16n bytes | Open path                        | [(x1,y1),...]                       |
| =polygon= | 40+16n bytes | Polygon (similar to closed path) | ((x1,y1),...)                       |
| =circle=  | 24 bytes     | Circle                           | <(x,y),r> (center point and radius) |

    #+BEGIN_SRC sql
      select POINT(10, 10);
    #+END_SRC

    #+BEGIN_SRC sql
      select LSEG '(-10, 0), (10, 0)';
    #+END_SRC

    #+BEGIN_SRC sql
      select LSEG '(-10, 0), (10, 0)' ?# LSEG '(0, -10), (0, 10)';
    #+END_SRC

** Arrays

   [[https://postgrespro.ru/docs/postgrespro/10/arrays?lang=en][Arrays]] - of any built-in or user-defined base type, enum type, or composite type can be created.

:zap: [[https://www.postgresql.org/docs/13/functions-array.html][Array Functions and Operators]]

    #+BEGIN_SRC sql
      select ARRAY[1, 2, 3];
    #+END_SRC

    #+BEGIN_SRC sql
      select ARRAY[1, 2, 'ups'];
    #+END_SRC

    #+BEGIN_SRC sql
      select '{1, 2, 3}'::int[];
    #+END_SRC

    #+BEGIN_SRC sql
      select ARRAY['{"name": "Joe"}', '{"name": "Bob"}'];
    #+END_SRC

    #+BEGIN_SRC sql
      select ARRAY['{"name": "Joe"}'::jsonb, '{"name": "Bob"}'::jsonb];
    #+END_SRC

    #+BEGIN_SRC sql
      select ARRAY['[{"name": "Joe"}]'::jsonb, '[{"name": "Bob"}]'::jsonb];
    #+END_SRC


** Other Types

   [[https://postgrespro.ru/docs/postgrespro/10/datatype-money?lang=en][Monetary]] - type stores a currency amount with a fixed fractional precision
   [[https://postgrespro.ru/docs/postgrespro/10/datatype-binary?lang=en][Binary Data Types]] - ~bytea~ data type allows storage of binary strings
   [[https://postgrespro.ru/docs/postgrespro/10/datatype-enum?lang=en][Enumerated Types]] - types are data types that comprise a static, ordered set of values
   [[https://postgrespro.ru/docs/postgrespro/10/datatype-net-types?lang=en][Network Address]] - data types to store ~IPv4~, ~IPv6~, and ~MAC~ addresses
   [[https://postgrespro.ru/docs/postgrespro/10/datatype-bit?lang=en][Bit String]] - can be used to store or visualize bit masks.
   [[https://postgrespro.ru/docs/postgrespro/10/datatype-textsearch?lang=en][Text Search]] - data types that are designed to support full text search
   [[https://postgrespro.ru/docs/postgrespro/10/datatype-uuid?lang=en][UUID type]] - for ~UUID~ storage
   [[https://postgrespro.ru/docs/postgrespro/10/datatype-xml?lang=en][XML type]] - data type can be used to store ~XML~ data
   [[https://postgrespro.ru/docs/postgrespro/10/rowtypes?lang=en][Composite type]] - composite type represents the structure of a row or record
   [[https://postgrespro.ru/docs/postgrespro/10/rangetypes?lang=en][Range types]] - are data types representing a range of values of some element type
   [[https://postgrespro.ru/docs/postgrespro/10/datatype-pseudo?lang=en][Pseudo-Types]] - special-purpose entries that are collectively called pseudo-types.
                  A pseudo-type cannot be used as a column data type, but it can be
                  used to declare a function's argument or result type.

** PostgreSQL forks

   [[https://www.timescale.com/][Timescale DB]] - PostgreSQL for time-series.
   [[https://postgis.net/][PostGIS]] - adds support for geographic objects allowing location queries to be run in SQL.
   [[https://www.postgres-xl.org/][Postgres-XL]] - Postgres-XL is an all-purpose fully ACID open source scale-out SQL database solution.
   [[https://greenplum.org/][Greenplum]] - Massively Parallel Postgres for Analytics.
   [[https://github.com/pipelinedb/pipelinedb][PipelineDB]] - PostgreSQL extension for high-performance time-series aggregation, designed to power realtime reporting and analytics applications.

* Aggregates

  [[https://www.postgresql.org/docs/9.5/functions-aggregate.html][Aggregate Functions]] - compute a single result from a set of input values.

  #+BEGIN_SRC sql
    select sum(x) as "sum"
         , count(*) as "count"
         , max(x) as "max"
         , string_agg(x::text, ' ')
    from  generate_series(0, 5) x
  #+END_SRC

** Sorting and Filtering in aggregates

  #+BEGIN_SRC sql
    select array_agg(x)
    from  generate_series(0, 10) x
  #+END_SRC

  #+BEGIN_SRC sql
    select array_agg(x::int order by x desc)
    from  generate_series(0, 10) x
  #+END_SRC

  #+BEGIN_SRC sql
    select array_agg(x::int order by x desc) filter (where x > 5)
    from  generate_series(0, 10) x
  #+END_SRC

  #+BEGIN_SRC sql
    select unnest(x)
    from (
      select array_agg(x::int order by x desc) filter (where x > 5)
      from  generate_series(0, 10) x
    ) t(x)
  #+END_SRC

** Window Functions

   [[https://www.postgresql.org/docs/12/functions-window.html][Window Functions]] - performs a calculation across a set of table rows that are somehow related to the current row.

  #+BEGIN_SRC sql
    select EXTRACT(YEAR from d), v
          , lag(v, -1) over (order by d desc) prev
          , v - lag(v, -1) over (order by d desc)  inc
    from (values ('2021-01-01'::date, 10)
               , ('2020-01-01'::date, 8)
               , ('2019-01-01'::date, 10)
               , ('2018-01-01'::date, 5))  t(d, v)
  #+END_SRC

* Joins

  #+BEGIN_SRC sql
    create table j_a (
      id serial,
      t text);
  #+END_SRC

  #+BEGIN_SRC sql
    insert into j_a (t)
    values ('odin'), ('dwa');
  #+END_SRC

#+BEGIN_SRC sql
  create table j_b (
    id serial,
    t text)
#+END_SRC

  #+BEGIN_SRC sql
    insert into j_b (t)
    values ('one'), ('two');
  #+END_SRC

  #+BEGIN_SRC sql
    select *
      from j_a a
      join j_b b
	on a.id = b.id
  #+END_SRC

* CTE and RECURSIVE

   [[https://postgrespro.ru/docs/postgrespro/13/queries-with?lang=en][Common Table Expressions]] - provides a way to write auxiliary statements for use in a larger query.

    #+BEGIN_SRC sql
      with numbers as (
	  select generate_series(1, 5) x)
      select * from numbers;
    #+END_SRC

    #+BEGIN_SRC sql
      with
	numbers as (
	  select generate_series(1, 5) x
	),
	odd as (
	  select * from numbers where (x % 2) = 1
	)
      select x as "odd" from odd;
    #+END_SRC

** Recursive

    #+BEGIN_SRC sql
      WITH RECURSIVE r AS (
	  SELECT
	      1 AS i,
	      1 AS factorial

	  UNION

	  SELECT
	      i+1 AS i,
	      factorial * (i+1) as factorial
	  FROM r
	  WHERE i < 10
      )
      SELECT * FROM r;
    #+END_SRC

*** Task

    Find deepest organization

    #+BEGIN_SRC sql
      create table organization (
	id int,
	parent int,
	name text
      );
    #+END_SRC

#+BEGIN_SRC sql
  insert into organization (id, parent, name)
  values (1, null, 'ГКБ 1')
	 ,(2, null, 'ГКБ 2')
	 ,(3, 1, 'Детское отделение')
	 ,(4, 3, 'Правое крыло')
	 ,(5, 4, 'Кабинет педиатора')
	 ,(6, 2, 'Хирургия')
#+END_SRC


#+BEGIN_SRC sql
select * from organization;
#+END_SRC




**** Answer

#+BEGIN_SRC sql
  with recursive orgs as
  (
     select *, 1 lvl, id head
     from organization
     where parent is null

     union

     select o.*, orgs.lvl + 1 lvl, orgs.head head
     from orgs as orgs
     join organization as o
       on o.parent = orgs.id
  )
  select o.name as deepest_org, orgs.lvl dpth
  from orgs orgs
  join organization o
    on o.id = orgs.head
  order by lvl desc
#+END_SRC

* Out of scope

  - Views and Materialized views
  - Roles and permissions
  - Triggers

* SQL trainers

  [[https://learndb.ru/][LearnDB]] - modern UI, theory and practic
  [[https://sql-academy.org/][SQL academy]] - interactive ui, rating, complex tasks
  [[https://sql-ex.ru/][SQL-ex]] - very old site
  [[https://pgexercises.com/][PostgreSQL Exercises]] - Good ui

* Home Work

  Find all gaps in table:

#+BEGIN_SRC sql
  create table gaps (id integer primary key);
  insert into gaps (id) select x from generate_series(1, 10000) x;
  delete from gaps where id between 102 and 105;
  delete from gaps where id between 134 and 176;
#+END_SRC

  Result:

| from |  to |
|------+-----|
|  102 | 105 |
|  134 | 176 |
